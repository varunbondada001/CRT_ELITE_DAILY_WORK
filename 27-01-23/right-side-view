/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    List<Integer> llist = new ArrayList<>();
    public List<Integer> rightSideView(TreeNode root) {
        if(root==null)
            return llist;
        Queue<TreeNode> queue = new LinkedList<>();
        queue.add(root);
        while(!queue.isEmpty()){
            int queuesize = queue.size();
            for(int i=0;i<queuesize;i++){
                TreeNode curr = queue.poll();
                if(i==queuesize-1)
                    llist.add(curr.val);
                if(curr.left!=null)
                    queue.add(curr.left);
                if(curr.right!=null)
                    queue.add(curr.right);
                
            }
           
        }
        return llist;
    }
}
