/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    List<List<Integer>> result = new ArrayList<>();

    public List<List<Integer>> levelOrder(TreeNode root) {
        if(root==null)
            return result;
        Queue<TreeNode> queue = new LinkedList<>();
        queue.add(root);
        List<Integer> res = new ArrayList<>();
        res.add(root.val);
        result.add(res);
        while(!queue.isEmpty() ){
            List<Integer> itr = new ArrayList<>();
            //to add list of list
            int sizequeue = queue.size();
            
            for(int i=0;i<sizequeue;i++){
                TreeNode curr = queue.poll(); 
                
                if(curr.left!=null){
                    queue.add(curr.left);
                    itr.add(curr.left.val);
                }
                if(curr.right!=null){
                    queue.add(curr.right);
                    itr.add(curr.right.val);
                }
            }
            if(itr.size()==0)
                break;
            result.add(itr);
                 

        }
        
        return result;

    }
}
