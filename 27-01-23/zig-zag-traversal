/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
     List<List<Integer>>res=new LinkedList<>();
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
    if(root == null)
        return res;
    Queue<TreeNode> queue = new LinkedList<>();
    queue.add(root);
    boolean leftToRight = true;
    while(!queue.isEmpty()){
        List<Integer> itr = new ArrayList<>();
            //to add list of list
            int sizequeue = queue.size();
              List<Integer> temp = new ArrayList<>();
            for(int i=0;i<sizequeue;i++){
                TreeNode curr = queue.poll(); 
              
                  if(curr.left!=null){
                    queue.add(curr.left);
                }
                if(curr.right!=null){
                    queue.add(curr.right);
                }
                if(leftToRight)
                    temp.add(curr.val);
                else
                    temp.add(0,curr.val);
                }
                leftToRight=!leftToRight;
           res.add(temp);
           }
           return res;  
        
    }
}
